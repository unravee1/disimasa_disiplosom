{"ast":null,"code":"var _jsxFileName = \"F:\\\\CourseWork\\\\client\\\\src\\\\components\\\\AppRouter.js\";\nimport React from 'react';\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { authRoutes } from \"../routes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppRouter = () => {\n  const isAuth = false;\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [user.isAuth && authRoutes.map(_ref => {\n      let {\n        path,\n        Component\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        component: Component,\n        exact: true\n      }, path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this);\n    }), publicRoutes.map(_ref2 => {\n      let {\n        path,\n        Component\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        component: Component,\n        exact: true\n      }, path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\n_c = AppRouter;\nexport default AppRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"names":["React","Switch","Route","Redirect","authRoutes","AppRouter","isAuth","user","map","path","Component","publicRoutes"],"sources":["F:/CourseWork/client/src/components/AppRouter.js"],"sourcesContent":["import React from 'react';\r\nimport {Switch,Route,Redirect} from \"react-router-dom\"\r\nimport {authRoutes} from \"../routes\";\r\n\r\nconst AppRouter = () => {\r\n    const isAuth = false\r\n    return (\r\n        <Switch>\r\n            {user.isAuth && authRoutes.map(({path, Component}) =>\r\n                <Route key={path} path={path} component={Component} exact/>\r\n            )}\r\n            {publicRoutes.map(({path, Component}) =>\r\n                <Route key={path} path={path} component={Component} exact/>\r\n            )}\r\n        </Switch>\r\n    );\r\n};\r\n\r\nexport default AppRouter;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAeC,KAAf,EAAqBC,QAArB,QAAoC,kBAApC;AACA,SAAQC,UAAR,QAAyB,WAAzB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EACpB,MAAMC,MAAM,GAAG,KAAf;EACA,oBACI,QAAC,MAAD;IAAA,WACKC,IAAI,CAACD,MAAL,IAAeF,UAAU,CAACI,GAAX,CAAe;MAAA,IAAC;QAACC,IAAD;QAAOC;MAAP,CAAD;MAAA,oBAC3B,QAAC,KAAD;QAAkB,IAAI,EAAED,IAAxB;QAA8B,SAAS,EAAEC,SAAzC;QAAoD,KAAK;MAAzD,GAAYD,IAAZ;QAAA;QAAA;QAAA;MAAA,QAD2B;IAAA,CAAf,CADpB,EAIKE,YAAY,CAACH,GAAb,CAAiB;MAAA,IAAC;QAACC,IAAD;QAAOC;MAAP,CAAD;MAAA,oBACd,QAAC,KAAD;QAAkB,IAAI,EAAED,IAAxB;QAA8B,SAAS,EAAEC,SAAzC;QAAoD,KAAK;MAAzD,GAAYD,IAAZ;QAAA;QAAA;QAAA;MAAA,QADc;IAAA,CAAjB,CAJL;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAUH,CAZD;;KAAMJ,S;AAcN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}