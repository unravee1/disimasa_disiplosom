{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\unrav\\\\Downloads\\\\\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430 (1)\\\\\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430\\\\front\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { BrowserRouter } from \"react-router-dom\";\nimport NavBar from \"./components/NavBar\";\nimport AppRouter from \"./components/AppRouter\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"./index\";\nimport { check } from \"./http/userAPI\";\nimport { Spinner } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = _s(observer(_c = _s(() => {\n  _s();\n\n  const {\n    user\n  } = useContext(Context);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    check().then(data => {\n      user.setUser(data);\n      user.setIsAuth(true);\n    }).finally(() => setLoading(false));\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"grow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AppRouter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}, \"4mt1jDoDt0h52XCxQdiEl89i/LM=\")), \"4mt1jDoDt0h52XCxQdiEl89i/LM=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App$observer\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useContext","useEffect","useState","BrowserRouter","NavBar","AppRouter","observer","Context","check","Spinner","App","user","loading","setLoading","then","data","setUser","setIsAuth","finally"],"sources":["C:/Users/unrav/Downloads/Новая папка (1)/Новая папка/front/src/App.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { BrowserRouter } from \"react-router-dom\";\nimport NavBar from \"./components/NavBar\";\nimport AppRouter from \"./components/AppRouter\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"./index\";\nimport { check } from \"./http/userAPI\";\nimport { Spinner } from \"react-bootstrap\";\n\nconst App = observer(() => {\n    const { user } = useContext(Context);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        check().then(data => {\n            user.setUser(data);\n            user.setIsAuth(true);\n        }).finally(() => setLoading(false));\n    }, []);\n\n    if (loading) {\n        return <Spinner animation={\"grow\"} />;\n    }\n\n    return (\n        <BrowserRouter>\n            <NavBar />\n            <AppRouter />\n        </BrowserRouter>\n    );\n});\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,OAAT,QAAwB,iBAAxB;;;AAEA,MAAMC,GAAG,MAAGJ,QAAQ,SAAC,MAAM;EAAA;;EACvB,MAAM;IAAEK;EAAF,IAAWX,UAAU,CAACO,OAAD,CAA3B;EACA,MAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;EAEAD,SAAS,CAAC,MAAM;IACZO,KAAK,GAAGM,IAAR,CAAaC,IAAI,IAAI;MACjBJ,IAAI,CAACK,OAAL,CAAaD,IAAb;MACAJ,IAAI,CAACM,SAAL,CAAe,IAAf;IACH,CAHD,EAGGC,OAHH,CAGW,MAAML,UAAU,CAAC,KAAD,CAH3B;EAIH,CALQ,EAKN,EALM,CAAT;;EAOA,IAAID,OAAJ,EAAa;IACT,oBAAO,QAAC,OAAD;MAAS,SAAS,EAAE;IAApB;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;EAED,oBACI,QAAC,aAAD;IAAA,wBACI,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,SAAD;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH,CArBmB,kCAAX,iCAAT;;MAAMF,G;AAuBN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}